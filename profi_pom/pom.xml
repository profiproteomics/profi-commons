<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>fr.proline</groupId>
  <artifactId>profi-pom</artifactId>
  <version>1.1.0_jdk11-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>${project.artifactId}</name>
  <description>Master Maven POM for all ProFI projects: Commons, Core and IHM</description>
<!-- Lastest version checkes : 19/06/2017 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scala.version>2.12.11</scala.version> <!-- Scala version -->
    <scala.compat.version>2.12</scala.compat.version> <!-- Scala library version -->
    <jackson.version>2.12.4</jackson.version>
    <sqlite4java.version>1.0.392</sqlite4java.version>
    <msgpack.version>0.9.0</msgpack.version>
    <hibernate.version>5.5.5.Final</hibernate.version>
  </properties>

  <!-- Latest version checked on  July 2020 -->
  <dependencyManagement>
    <dependencies>
    
      <!-- Scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
		<groupId>org.scala-lang.modules</groupId>
  		<artifactId>scala-xml_${scala.compat.version}</artifactId>
  		<version>2.0.1</version>
	 </dependency>
      <dependency>
        <groupId>org.scala-lang.modules</groupId>
        <artifactId>scala-parser-combinators_${scala.compat.version}</artifactId>
        <version>2.0.0</version>
      </dependency>


      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.32</version>
      </dependency>

      <dependency>
        <groupId>com.typesafe.scala-logging</groupId>
        <artifactId>scala-logging_${scala.compat.version}</artifactId>
        <version>3.9.4</version>
      </dependency>

      <!-- Bridge Apache commons-logging over SLF4J -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>1.7.32</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.2.5</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.2.5</version>
      </dependency>

      <!-- Apache commons modules -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.6</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>3.6.1</version>
      </dependency>

      <!-- Hibernate ORM -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- C3p0 Pool for Hibernate (same version as hibernate-entitymanager dependency) -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-c3p0</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- Explicit c3p0 latest version to use mchange-commons-java compatible with SLF4J -->
      <dependency>
        <groupId>com.mchange</groupId>
        <artifactId>c3p0</artifactId>
        <version>0.9.5.5</version>
      </dependency>

      <!-- Date and Time -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.10.10</version>
      </dependency>

      <!-- Note: joda-time 2.2+ requires joda-convert to compile Scala projects -->
      <dependency>
        <groupId>org.joda</groupId>
        <artifactId>joda-convert</artifactId>
        <version>2.2.1</version>
      </dependency>

      <!-- JSON Serialization -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-scala_${scala.compat.version}</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      
      <!-- MessagePack Serialization -->
      <dependency>
        <groupId>org.msgpack</groupId>
        <artifactId>jackson-dataformat-msgpack</artifactId>
        <version>${msgpack.version}</version>
      </dependency>
      <dependency>
        <groupId>org.msgpack</groupId>
        <artifactId>msgpack-core</artifactId>
        <version>${msgpack.version}</version>
      </dependency>

      <!-- JSON-RPC -->
      <dependency>
        <groupId>com.thetransactioncompany</groupId>
        <artifactId>jsonrpc2-base</artifactId>
        <version>1.38.2</version>
      </dependency>

      <!-- Databases -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>42.2.23</version>
        <!-- Exclude slf4j-simple which the implementation used by logback-classic dependency -->
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>1.4.200</version>
      </dependency>

      <dependency>
        <groupId>org.xerial</groupId>
        <artifactId>sqlite-jdbc</artifactId>
        <version>3.36.0.1</version>
      </dependency>
      
      <!-- Command Line Interface -->
      <dependency>
        <groupId>com.beust</groupId>
        <artifactId>jcommander</artifactId>
        <version>1.81</version>
      </dependency>

      <!-- JUnit tests -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
        <scope>test</scope>
      </dependency>

      <!-- Scala tests -->
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.compat.version}</artifactId>
        <version>3.2.9</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.scalactic</groupId>
        <artifactId>scalactic_${scala.compat.version}</artifactId>
        <version>3.2.9</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-shouldmatchers_${scala.compat.version}</artifactId>
        <version>3.2.9</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.scalatestplus</groupId>
        <artifactId>junit-4-13_${scala.compat.version}</artifactId>
        <version>3.2.9.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-funsuite_${scala.compat.version}</artifactId>
        <version>3.2.9</version>
        <scope>test</scope>
      </dependency>

      <!-- Database tests -->
      <dependency>
        <groupId>org.dbunit</groupId>
        <artifactId>dbunit</artifactId>
        <version>2.7.2</version>
        <scope>test</scope>
        <!-- Exclude slf4j which is an older version than the logback dependency -->
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <licenses>
    <license>
      <name>CeCILL License v2.1</name>
      <url>http://www.cecill.info/licences/Licence_CeCILL_V2.1-en.html</url>
      <comments/>
    </license>
  </licenses>

  <build>
    <pluginManagement><!-- Latest version checked on July 2017 -->
      <plugins>

        <!-- Java build -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>11</source>
            <target>11</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
          <configuration>
          	 <includes>          		          		
				<include>%regex[.*[Test|Spec].*]</include>
          	</includes>
          </configuration>
        </plugin>

        <!-- Scala build -->
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.2</version>
          <executions>
            <execution>
              <goals>
                <goal>compile</goal>
                <goal>testCompile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <args>
              <!-- work-around for https://issues.scala-lang.org/browse/SI-8358 -->
              <arg>-nobootcp</arg>
            </args>
          </configuration>
        </plugin>

        <!-- Used to replace strings in text files (generate Version.java and Version.scala from templates) -->
        <!-- Version 1.6 exist but not available in repo ... -->
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.3</version>

          <executions>
            <execution>
              <id>java-version-generation</id>
              <phase>none</phase>
              <goals>
                <goal>replace</goal>
              </goals>
              <!-- ${version.path} must be defined in child pom inheriting from this parent pom  -->
              <configuration>
                <skip>true</skip>
                <file>${version.path}/JavaVersion.java.template</file>
                <outputFile>${version.path}/JavaVersion.java</outputFile>
                <replacements>
                  <replacement>
                    <token>_moduleName_</token>
                    <value>${project.name}</value>
                  </replacement>
                  <replacement>
                    <token>_version_</token>
                    <value>${project.version}_${maven.build.timestamp}_${user.name}</value>
                  </replacement>
                </replacements>
              </configuration>
            </execution>

            <execution>
              <id>scala-version-generation</id>
              <goals>
                <goal>replace</goal>
              </goals>

              <!-- ${version.path} must be defined in child pom inheriting from this one -->
              <configuration>
                <skip>true</skip>
                <file>${version.path}/ScalaVersion.scala.template</file>
                <outputFile>${version.path}/ScalaVersion.scala</outputFile>
                <replacements>
                  <replacement>
                    <token>_moduleName_</token>
                    <value>${project.name}</value>
                  </replacement>
                  <replacement>
                    <token>_version_</token>
                    <value>${project.version}_${maven.build.timestamp}_${user.name}</value>
                  </replacement>
                </replacements>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
       
        <!-- Creates a runnable script allowing to start the application -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>2.0.0</version>
        </plugin>

        <!-- FindBugs plugin, format xml -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>3.0.4</version>
          <configuration>
            <findbugsXmlOutput>true</findbugsXmlOutput>
            <xmlOutput>true</xmlOutput>
          </configuration>
        </plugin>

        <!-- Flatten plugin to deploy flatten pom -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.2.2</version>
          <configuration>
            <flattenMode></flattenMode>
          </configuration>
          <executions>
            <!-- enable flattening -->
            <execution>
              <id>flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <!-- ensure proper cleanup -->
            <execution>
              <id>flatten.clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- Cobertura plugin, format xml -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <formats>
              <format>xml</format>
            </formats>
          </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>cobertura</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <!-- JaCoCo plugin -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.4.201502262128</version> <!-- Latest version checked on 28 July 2015. Do not use 0.7.5, not compatible with Jenkins Jacoco plugin -->
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
        </plugin>
      </plugins>

    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicatePomDependencyVersions/>
                <requireMavenVersion>
                  <version>3.6</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>11</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>
